{
  "metadata": {
    "timestamp": "2025-10-25T01:00:39.511605",
    "total_entities": 72,
    "total_relations": 63
  },
  "entities": {
    "class:FileUtilities": {
      "node_id": "class:FileUtilities",
      "attributes": {
        "type": "ApexClass",
        "name": "FileUtilities",
        "simpleName": "FileUtilities",
        "definingType": "FileUtilities",
        "public": false,
        "withSharing": false,
        "fileName": "FileUtilities_ast.xml",
        "created_at": "2025-10-25T01:00:39.421842"
      }
    },
    "class:FileUtilitiesTest": {
      "node_id": "class:FileUtilitiesTest",
      "attributes": {
        "type": "ApexClass",
        "name": "FileUtilitiesTest",
        "simpleName": "FileUtilitiesTest",
        "definingType": "FileUtilitiesTest",
        "public": false,
        "withSharing": true,
        "fileName": "FileUtilitiesTest_ast.txt",
        "created_at": "2025-10-25T01:00:37.920457"
      }
    },
    "class:GeocodingService": {
      "node_id": "class:GeocodingService",
      "attributes": {
        "type": "ApexClass",
        "name": "GeocodingService",
        "simpleName": "GeocodingService",
        "definingType": "GeocodingService",
        "public": false,
        "withSharing": false,
        "fileName": "GeocodingService_ast.txt",
        "created_at": "2025-10-25T01:00:38.265483"
      }
    },
    "class:GeocodingServiceTest": {
      "node_id": "class:GeocodingServiceTest",
      "attributes": {
        "type": "ApexClass",
        "name": "GeocodingServiceTest",
        "simpleName": "GeocodingServiceTest",
        "definingType": "GeocodingServiceTest",
        "public": false,
        "withSharing": true,
        "fileName": "GeocodingServiceTest_ast.txt",
        "created_at": "2025-10-25T01:00:38.155788"
      }
    },
    "class:PagedResult": {
      "node_id": "class:PagedResult",
      "attributes": {
        "type": "ApexClass",
        "name": "PagedResult",
        "simpleName": "PagedResult",
        "definingType": "PagedResult",
        "public": false,
        "withSharing": false,
        "fileName": "PagedResult_ast.txt",
        "created_at": "2025-10-25T01:00:38.299032"
      }
    },
    "class:PropertyController": {
      "node_id": "class:PropertyController",
      "attributes": {
        "type": "ApexClass",
        "name": "PropertyController",
        "simpleName": "PropertyController",
        "definingType": "PropertyController",
        "public": false,
        "withSharing": false,
        "fileName": "PropertyController_ast.txt",
        "created_at": "2025-10-25T01:00:38.495851"
      }
    },
    "class:SampleDataController": {
      "node_id": "class:SampleDataController",
      "attributes": {
        "type": "ApexClass",
        "name": "SampleDataController",
        "simpleName": "SampleDataController",
        "definingType": "SampleDataController",
        "public": false,
        "withSharing": false,
        "fileName": "SampleDataController_ast.txt",
        "created_at": "2025-10-25T01:00:38.632597"
      }
    },
    "class:TestPropertyController": {
      "node_id": "class:TestPropertyController",
      "attributes": {
        "type": "ApexClass",
        "name": "TestPropertyController",
        "simpleName": "TestPropertyController",
        "definingType": "TestPropertyController",
        "public": false,
        "withSharing": false,
        "fileName": "TestPropertyController_ast.txt",
        "created_at": "2025-10-25T01:00:39.029942"
      }
    },
    "method:FileUtilities.createFile": {
      "node_id": "method:FileUtilities.createFile",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "FileUtilities.createFile",
        "className": "FileUtilities",
        "name": "createFile",
        "public": true,
        "static": true,
        "returnType": "String",
        "arity": 3,
        "created_at": "2025-10-25T01:00:39.432129"
      }
    },
    "method:FileUtilitiesTest.createFileFailsWhenIncorrectBase64Data": {
      "node_id": "method:FileUtilitiesTest.createFileFailsWhenIncorrectBase64Data",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "FileUtilitiesTest.createFileFailsWhenIncorrectBase64Data",
        "className": "FileUtilitiesTest",
        "name": "createFileFailsWhenIncorrectBase64Data",
        "public": false,
        "static": true,
        "returnType": "void",
        "arity": 0,
        "created_at": "2025-10-25T01:00:37.982475"
      }
    },
    "method:FileUtilitiesTest.createFileFailsWhenIncorrectFilename": {
      "node_id": "method:FileUtilitiesTest.createFileFailsWhenIncorrectFilename",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "FileUtilitiesTest.createFileFailsWhenIncorrectFilename",
        "className": "FileUtilitiesTest",
        "name": "createFileFailsWhenIncorrectFilename",
        "public": false,
        "static": true,
        "returnType": "void",
        "arity": 0,
        "created_at": "2025-10-25T01:00:38.024172"
      }
    },
    "method:FileUtilitiesTest.createFileFailsWhenIncorrectRecordId": {
      "node_id": "method:FileUtilitiesTest.createFileFailsWhenIncorrectRecordId",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "FileUtilitiesTest.createFileFailsWhenIncorrectRecordId",
        "className": "FileUtilitiesTest",
        "name": "createFileFailsWhenIncorrectRecordId",
        "public": false,
        "static": true,
        "returnType": "void",
        "arity": 0,
        "created_at": "2025-10-25T01:00:37.963461"
      }
    },
    "method:FileUtilitiesTest.createFileSucceedsWhenCorrectInput": {
      "node_id": "method:FileUtilitiesTest.createFileSucceedsWhenCorrectInput",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "FileUtilitiesTest.createFileSucceedsWhenCorrectInput",
        "className": "FileUtilitiesTest",
        "name": "createFileSucceedsWhenCorrectInput",
        "public": false,
        "static": true,
        "returnType": "void",
        "arity": 0,
        "created_at": "2025-10-25T01:00:37.922819"
      }
    },
    "method:GeocodingService.geocodeAddresses": {
      "node_id": "method:GeocodingService.geocodeAddresses",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "GeocodingService.geocodeAddresses",
        "className": "GeocodingService",
        "name": "geocodeAddresses",
        "public": true,
        "static": true,
        "returnType": "List&lt;Coordinates>",
        "arity": 1,
        "created_at": "2025-10-25T01:00:38.275991"
      }
    },
    "method:GeocodingServiceTest.blankAddress": {
      "node_id": "method:GeocodingServiceTest.blankAddress",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "GeocodingServiceTest.blankAddress",
        "className": "GeocodingServiceTest",
        "name": "blankAddress",
        "public": false,
        "static": true,
        "returnType": "void",
        "arity": 0,
        "created_at": "2025-10-25T01:00:38.224926"
      }
    },
    "method:GeocodingServiceTest.errorResponse": {
      "node_id": "method:GeocodingServiceTest.errorResponse",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "GeocodingServiceTest.errorResponse",
        "className": "GeocodingServiceTest",
        "name": "errorResponse",
        "public": false,
        "static": true,
        "returnType": "void",
        "arity": 0,
        "created_at": "2025-10-25T01:00:38.243966"
      }
    },
    "method:GeocodingServiceTest.respond": {
      "node_id": "method:GeocodingServiceTest.respond",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "GeocodingServiceTest.respond",
        "className": "GeocodingServiceTest",
        "name": "respond",
        "public": false,
        "static": false,
        "returnType": "HTTPResponse",
        "arity": 1,
        "created_at": "2025-10-25T01:00:38.185340"
      }
    },
    "method:GeocodingServiceTest.successResponse": {
      "node_id": "method:GeocodingServiceTest.successResponse",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "GeocodingServiceTest.successResponse",
        "className": "GeocodingServiceTest",
        "name": "successResponse",
        "public": false,
        "static": true,
        "returnType": "void",
        "arity": 0,
        "created_at": "2025-10-25T01:00:38.206380"
      }
    },
    "method:PagedResult.__sfdc_pageNumber": {
      "node_id": "method:PagedResult.__sfdc_pageNumber",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "PagedResult.__sfdc_pageNumber",
        "className": "PagedResult",
        "name": "__sfdc_pageNumber",
        "public": true,
        "static": false,
        "returnType": "void",
        "arity": 1,
        "created_at": "2025-10-25T01:00:38.384186"
      }
    },
    "method:PagedResult.__sfdc_pageSize": {
      "node_id": "method:PagedResult.__sfdc_pageSize",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "PagedResult.__sfdc_pageSize",
        "className": "PagedResult",
        "name": "__sfdc_pageSize",
        "public": true,
        "static": false,
        "returnType": "void",
        "arity": 1,
        "created_at": "2025-10-25T01:00:38.333717"
      }
    },
    "method:PagedResult.__sfdc_records": {
      "node_id": "method:PagedResult.__sfdc_records",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "PagedResult.__sfdc_records",
        "className": "PagedResult",
        "name": "__sfdc_records",
        "public": true,
        "static": false,
        "returnType": "void",
        "arity": 1,
        "created_at": "2025-10-25T01:00:38.473764"
      }
    },
    "method:PagedResult.__sfdc_totalItemCount": {
      "node_id": "method:PagedResult.__sfdc_totalItemCount",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "PagedResult.__sfdc_totalItemCount",
        "className": "PagedResult",
        "name": "__sfdc_totalItemCount",
        "public": true,
        "static": false,
        "returnType": "void",
        "arity": 1,
        "created_at": "2025-10-25T01:00:38.432157"
      }
    },
    "method:PropertyController.getPagedPropertyList": {
      "node_id": "method:PropertyController.getPagedPropertyList",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "PropertyController.getPagedPropertyList",
        "className": "PropertyController",
        "name": "getPagedPropertyList",
        "public": true,
        "static": true,
        "returnType": "PagedResult",
        "arity": 6,
        "created_at": "2025-10-25T01:00:38.506205"
      }
    },
    "method:PropertyController.getPictures": {
      "node_id": "method:PropertyController.getPictures",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "PropertyController.getPictures",
        "className": "PropertyController",
        "name": "getPictures",
        "public": true,
        "static": true,
        "returnType": "List&lt;ContentVersion>",
        "arity": 1,
        "created_at": "2025-10-25T01:00:38.569577"
      }
    },
    "method:SampleDataController.importSampleData": {
      "node_id": "method:SampleDataController.importSampleData",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "SampleDataController.importSampleData",
        "className": "SampleDataController",
        "name": "importSampleData",
        "public": true,
        "static": true,
        "returnType": "void",
        "arity": 0,
        "created_at": "2025-10-25T01:00:38.644404"
      }
    },
    "method:SampleDataController.insertBrokers": {
      "node_id": "method:SampleDataController.insertBrokers",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "SampleDataController.insertBrokers",
        "className": "SampleDataController",
        "name": "insertBrokers",
        "public": false,
        "static": false,
        "returnType": "void",
        "arity": 0,
        "created_at": "2025-10-25T01:00:38.821367"
      }
    },
    "method:SampleDataController.insertContacts": {
      "node_id": "method:SampleDataController.insertContacts",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "SampleDataController.insertContacts",
        "className": "SampleDataController",
        "name": "insertContacts",
        "public": false,
        "static": false,
        "returnType": "void",
        "arity": 0,
        "created_at": "2025-10-25T01:00:38.948971"
      }
    },
    "method:SampleDataController.insertProperties": {
      "node_id": "method:SampleDataController.insertProperties",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "SampleDataController.insertProperties",
        "className": "SampleDataController",
        "name": "insertProperties",
        "public": false,
        "static": false,
        "returnType": "void",
        "arity": 0,
        "created_at": "2025-10-25T01:00:38.891379"
      }
    },
    "method:SampleDataController.randomizeDateListed": {
      "node_id": "method:SampleDataController.randomizeDateListed",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "SampleDataController.randomizeDateListed",
        "className": "SampleDataController",
        "name": "randomizeDateListed",
        "public": false,
        "static": false,
        "returnType": "void",
        "arity": 1,
        "created_at": "2025-10-25T01:00:39.006872"
      }
    },
    "method:TestPropertyController.createProperties": {
      "node_id": "method:TestPropertyController.createProperties",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "TestPropertyController.createProperties",
        "className": "TestPropertyController",
        "name": "createProperties",
        "public": false,
        "static": false,
        "returnType": "void",
        "arity": 1,
        "created_at": "2025-10-25T01:00:39.039961"
      }
    },
    "method:TestPropertyController.testGetPagedPropertyList": {
      "node_id": "method:TestPropertyController.testGetPagedPropertyList",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "TestPropertyController.testGetPagedPropertyList",
        "className": "TestPropertyController",
        "name": "testGetPagedPropertyList",
        "public": false,
        "static": true,
        "returnType": "void",
        "arity": 0,
        "created_at": "2025-10-25T01:00:39.079627"
      }
    },
    "method:TestPropertyController.testGetPicturesNoResults": {
      "node_id": "method:TestPropertyController.testGetPicturesNoResults",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "TestPropertyController.testGetPicturesNoResults",
        "className": "TestPropertyController",
        "name": "testGetPicturesNoResults",
        "public": false,
        "static": true,
        "returnType": "void",
        "arity": 0,
        "created_at": "2025-10-25T01:00:39.175838"
      }
    },
    "method:TestPropertyController.testGetPicturesWithResults": {
      "node_id": "method:TestPropertyController.testGetPicturesWithResults",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "TestPropertyController.testGetPicturesWithResults",
        "className": "TestPropertyController",
        "name": "testGetPicturesWithResults",
        "public": false,
        "static": true,
        "returnType": "void",
        "arity": 0,
        "created_at": "2025-10-25T01:00:39.213442"
      }
    },
    "dml:FileUtilities.createFile.INSERT.0": {
      "node_id": "dml:FileUtilities.createFile.INSERT.0",
      "attributes": {
        "type": "DMLOperation",
        "className": "FileUtilities",
        "methodName": "createFile",
        "operationType": "INSERT"
      }
    },
    "dml:FileUtilities.createFile.INSERT.1": {
      "node_id": "dml:FileUtilities.createFile.INSERT.1",
      "attributes": {
        "type": "DMLOperation",
        "className": "FileUtilities",
        "methodName": "createFile",
        "operationType": "INSERT"
      }
    },
    "dml:FileUtilitiesTest.createFileFailsWhenIncorrectBase64Data.INSERT.0": {
      "node_id": "dml:FileUtilitiesTest.createFileFailsWhenIncorrectBase64Data.INSERT.0",
      "attributes": {
        "type": "DMLOperation",
        "className": "FileUtilitiesTest",
        "methodName": "createFileFailsWhenIncorrectBase64Data",
        "operationType": "INSERT"
      }
    },
    "dml:FileUtilitiesTest.createFileFailsWhenIncorrectFilename.INSERT.0": {
      "node_id": "dml:FileUtilitiesTest.createFileFailsWhenIncorrectFilename.INSERT.0",
      "attributes": {
        "type": "DMLOperation",
        "className": "FileUtilitiesTest",
        "methodName": "createFileFailsWhenIncorrectFilename",
        "operationType": "INSERT"
      }
    },
    "dml:FileUtilitiesTest.createFileSucceedsWhenCorrectInput.INSERT.0": {
      "node_id": "dml:FileUtilitiesTest.createFileSucceedsWhenCorrectInput.INSERT.0",
      "attributes": {
        "type": "DMLOperation",
        "className": "FileUtilitiesTest",
        "methodName": "createFileSucceedsWhenCorrectInput",
        "operationType": "INSERT"
      }
    },
    "dml:SampleDataController.importSampleData.DELETE.0": {
      "node_id": "dml:SampleDataController.importSampleData.DELETE.0",
      "attributes": {
        "type": "DMLOperation",
        "className": "SampleDataController",
        "methodName": "importSampleData",
        "operationType": "DELETE"
      }
    },
    "dml:SampleDataController.importSampleData.DELETE.1": {
      "node_id": "dml:SampleDataController.importSampleData.DELETE.1",
      "attributes": {
        "type": "DMLOperation",
        "className": "SampleDataController",
        "methodName": "importSampleData",
        "operationType": "DELETE"
      }
    },
    "dml:SampleDataController.importSampleData.DELETE.2": {
      "node_id": "dml:SampleDataController.importSampleData.DELETE.2",
      "attributes": {
        "type": "DMLOperation",
        "className": "SampleDataController",
        "methodName": "importSampleData",
        "operationType": "DELETE"
      }
    },
    "dml:SampleDataController.importSampleData.DELETE.3": {
      "node_id": "dml:SampleDataController.importSampleData.DELETE.3",
      "attributes": {
        "type": "DMLOperation",
        "className": "SampleDataController",
        "methodName": "importSampleData",
        "operationType": "DELETE"
      }
    },
    "dml:SampleDataController.insertBrokers.INSERT.0": {
      "node_id": "dml:SampleDataController.insertBrokers.INSERT.0",
      "attributes": {
        "type": "DMLOperation",
        "className": "SampleDataController",
        "methodName": "insertBrokers",
        "operationType": "INSERT"
      }
    },
    "dml:SampleDataController.insertContacts.INSERT.0": {
      "node_id": "dml:SampleDataController.insertContacts.INSERT.0",
      "attributes": {
        "type": "DMLOperation",
        "className": "SampleDataController",
        "methodName": "insertContacts",
        "operationType": "INSERT"
      }
    },
    "dml:SampleDataController.insertProperties.INSERT.0": {
      "node_id": "dml:SampleDataController.insertProperties.INSERT.0",
      "attributes": {
        "type": "DMLOperation",
        "className": "SampleDataController",
        "methodName": "insertProperties",
        "operationType": "INSERT"
      }
    },
    "dml:TestPropertyController.createProperties.INSERT.0": {
      "node_id": "dml:TestPropertyController.createProperties.INSERT.0",
      "attributes": {
        "type": "DMLOperation",
        "className": "TestPropertyController",
        "methodName": "createProperties",
        "operationType": "INSERT"
      }
    },
    "dml:TestPropertyController.testGetPagedPropertyList.INSERT.0": {
      "node_id": "dml:TestPropertyController.testGetPagedPropertyList.INSERT.0",
      "attributes": {
        "type": "DMLOperation",
        "className": "TestPropertyController",
        "methodName": "testGetPagedPropertyList",
        "operationType": "INSERT"
      }
    },
    "dml:TestPropertyController.testGetPagedPropertyList.INSERT.1": {
      "node_id": "dml:TestPropertyController.testGetPagedPropertyList.INSERT.1",
      "attributes": {
        "type": "DMLOperation",
        "className": "TestPropertyController",
        "methodName": "testGetPagedPropertyList",
        "operationType": "INSERT"
      }
    },
    "dml:TestPropertyController.testGetPicturesNoResults.INSERT.0": {
      "node_id": "dml:TestPropertyController.testGetPicturesNoResults.INSERT.0",
      "attributes": {
        "type": "DMLOperation",
        "className": "TestPropertyController",
        "methodName": "testGetPicturesNoResults",
        "operationType": "INSERT"
      }
    },
    "dml:TestPropertyController.testGetPicturesWithResults.INSERT.0": {
      "node_id": "dml:TestPropertyController.testGetPicturesWithResults.INSERT.0",
      "attributes": {
        "type": "DMLOperation",
        "className": "TestPropertyController",
        "methodName": "testGetPicturesWithResults",
        "operationType": "INSERT"
      }
    },
    "dml:TestPropertyController.testGetPicturesWithResults.INSERT.1": {
      "node_id": "dml:TestPropertyController.testGetPicturesWithResults.INSERT.1",
      "attributes": {
        "type": "DMLOperation",
        "className": "TestPropertyController",
        "methodName": "testGetPicturesWithResults",
        "operationType": "INSERT"
      }
    },
    "dml:TestPropertyController.testGetPicturesWithResults.INSERT.2": {
      "node_id": "dml:TestPropertyController.testGetPicturesWithResults.INSERT.2",
      "attributes": {
        "type": "DMLOperation",
        "className": "TestPropertyController",
        "methodName": "testGetPicturesWithResults",
        "operationType": "INSERT"
      }
    },
    "soql:FileUtilities.createFile.0": {
      "node_id": "soql:FileUtilities.createFile.0",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT ContentDocumentId                 FROM ContentVersion                 WHERE Id = :contentVersion.Id                 WITH USER_MODE",
        "canonicalQuery": "SELECT ContentDocumentId                 FROM ContentVersion                 WHERE Id = :tmpVar1                 WITH USER_MODE",
        "className": "FileUtilities",
        "methodName": "createFile"
      }
    },
    "soql:PropertyController.getPagedPropertyList.0": {
      "node_id": "soql:PropertyController.getPagedPropertyList.0",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT COUNT()             FROM Property__c             WHERE                 (Name LIKE :searchPattern                 OR City__c LIKE :searchPattern                 OR Tags__c LIKE :searchPattern)                 AND Price__c &lt;= :safeMaxPrice                 AND Beds__c >= :safeMinBedrooms                 AND Baths__c >= :safeMinBathrooms",
        "canonicalQuery": "SELECT COUNT()             FROM Property__c             WHERE                 (Name LIKE :tmpVar1                 OR City__c LIKE :tmpVar2                 OR Tags__c LIKE :tmpVar3)                 AND Price__c &lt;= :tmpVar4                 AND Beds__c >= :tmpVar5                 AND Baths__c >= :tmpVar6",
        "className": "PropertyController",
        "methodName": "getPagedPropertyList"
      }
    },
    "soql:PropertyController.getPagedPropertyList.1": {
      "node_id": "soql:PropertyController.getPagedPropertyList.1",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT                 Id,                 Name,                 Address__c,                 City__c,                 State__c,                 Description__c,                 Price__c,                 Baths__c,                 Beds__c,                 Thumbnail__c,                 Location__Latitude__s,                 Location__Longitude__s             FROM Property__c             WHERE                 (Name LIKE :searchPattern                 OR City__c LIKE :searchPattern                 OR Tags__c LIKE :searchPattern)                 AND Price__c &lt;= :safeMaxPrice                 AND Beds__c >= :safeMinBedrooms                 AND Baths__c >= :safeMinBathrooms             WITH USER_MODE             ORDER BY Price__c             LIMIT :safePageSize             OFFSET :offset",
        "canonicalQuery": "SELECT                 Id,                 Name,                 Address__c,                 City__c,                 State__c,                 Description__c,                 Price__c,                 Baths__c,                 Beds__c,                 Thumbnail__c,                 Location__Latitude__s,                 Location__Longitude__s             FROM Property__c             WHERE                 (Name LIKE :tmpVar1                 OR City__c LIKE :tmpVar2                 OR Tags__c LIKE :tmpVar3)                 AND Price__c &lt;= :tmpVar4                 AND Beds__c >= :tmpVar5                 AND Baths__c >= :tmpVar6             WITH USER_MODE             ORDER BY Price__c             LIMIT :tmpVar7             OFFSET :tmpVar8",
        "className": "PropertyController",
        "methodName": "getPagedPropertyList"
      }
    },
    "soql:PropertyController.getPictures.0": {
      "node_id": "soql:PropertyController.getPictures.0",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT Id, LinkedEntityId, ContentDocument.Title             FROM ContentDocumentLink             WHERE                 LinkedEntityId = :propertyId                 AND ContentDocument.FileType IN ('PNG', 'JPG', 'GIF')             WITH USER_MODE",
        "canonicalQuery": "SELECT Id, LinkedEntityId, ContentDocument.Title             FROM ContentDocumentLink             WHERE                 LinkedEntityId = :tmpVar1                 AND ContentDocument.FileType IN ('PNG', 'JPG', 'GIF')             WITH USER_MODE",
        "className": "PropertyController",
        "methodName": "getPictures"
      }
    },
    "soql:PropertyController.getPictures.1": {
      "node_id": "soql:PropertyController.getPictures.1",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT Id, Title             FROM ContentVersion             WHERE ContentDocumentId IN :contentIds AND IsLatest = TRUE             WITH USER_MODE             ORDER BY CreatedDate",
        "canonicalQuery": "SELECT Id, Title             FROM ContentVersion             WHERE ContentDocumentId IN :tmpVar1 AND IsLatest = TRUE             WITH USER_MODE             ORDER BY CreatedDate",
        "className": "PropertyController",
        "methodName": "getPictures"
      }
    },
    "soql:SampleDataController.importSampleData.0": {
      "node_id": "soql:SampleDataController.importSampleData.0",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT Id FROM Case",
        "canonicalQuery": "SELECT Id FROM Case",
        "className": "SampleDataController",
        "methodName": "importSampleData"
      }
    },
    "soql:SampleDataController.importSampleData.1": {
      "node_id": "soql:SampleDataController.importSampleData.1",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT Id FROM Property__c",
        "canonicalQuery": "SELECT Id FROM Property__c",
        "className": "SampleDataController",
        "methodName": "importSampleData"
      }
    },
    "soql:SampleDataController.importSampleData.2": {
      "node_id": "soql:SampleDataController.importSampleData.2",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT Id FROM Broker__c",
        "canonicalQuery": "SELECT Id FROM Broker__c",
        "className": "SampleDataController",
        "methodName": "importSampleData"
      }
    },
    "soql:SampleDataController.importSampleData.3": {
      "node_id": "soql:SampleDataController.importSampleData.3",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT Id FROM Contact",
        "canonicalQuery": "SELECT Id FROM Contact",
        "className": "SampleDataController",
        "methodName": "importSampleData"
      }
    },
    "soql:SampleDataController.insertBrokers.0": {
      "node_id": "soql:SampleDataController.insertBrokers.0",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT Id, Body             FROM StaticResource             WHERE Name = 'sample_data_brokers'",
        "canonicalQuery": "SELECT Id, Body             FROM StaticResource             WHERE Name = 'sample_data_brokers'",
        "className": "SampleDataController",
        "methodName": "insertBrokers"
      }
    },
    "soql:SampleDataController.insertContacts.0": {
      "node_id": "soql:SampleDataController.insertContacts.0",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT Id, Body             FROM StaticResource             WHERE Name = 'sample_data_contacts'",
        "canonicalQuery": "SELECT Id, Body             FROM StaticResource             WHERE Name = 'sample_data_contacts'",
        "className": "SampleDataController",
        "methodName": "insertContacts"
      }
    },
    "soql:SampleDataController.insertProperties.0": {
      "node_id": "soql:SampleDataController.insertProperties.0",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT Id, Body             FROM StaticResource             WHERE Name = 'sample_data_properties'",
        "canonicalQuery": "SELECT Id, Body             FROM StaticResource             WHERE Name = 'sample_data_properties'",
        "className": "SampleDataController",
        "methodName": "insertProperties"
      }
    },
    "soql:TestPropertyController.testGetPagedPropertyList.0": {
      "node_id": "soql:TestPropertyController.testGetPagedPropertyList.0",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT Name, Id             FROM Profile             WHERE                 UserType = 'Standard'                 AND PermissionsPrivacyDataAccess = FALSE                 AND PermissionsSubmitMacrosAllowed = TRUE                 AND PermissionsMassInlineEdit = TRUE             LIMIT 1",
        "canonicalQuery": "SELECT Name, Id             FROM Profile             WHERE                 UserType = 'Standard'                 AND PermissionsPrivacyDataAccess = FALSE                 AND PermissionsSubmitMacrosAllowed = TRUE                 AND PermissionsMassInlineEdit = TRUE             LIMIT 1",
        "className": "TestPropertyController",
        "methodName": "testGetPagedPropertyList"
      }
    },
    "soql:TestPropertyController.testGetPagedPropertyList.1": {
      "node_id": "soql:TestPropertyController.testGetPagedPropertyList.1",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT Id             FROM PermissionSet             WHERE Name = 'dreamhouse'",
        "canonicalQuery": "SELECT Id             FROM PermissionSet             WHERE Name = 'dreamhouse'",
        "className": "TestPropertyController",
        "methodName": "testGetPagedPropertyList"
      }
    },
    "soql:TestPropertyController.testGetPicturesWithResults.0": {
      "node_id": "soql:TestPropertyController.testGetPicturesWithResults.0",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT Id, Title, LatestPublishedVersionId             FROM ContentDocument             LIMIT 1",
        "canonicalQuery": "SELECT Id, Title, LatestPublishedVersionId             FROM ContentDocument             LIMIT 1",
        "className": "TestPropertyController",
        "methodName": "testGetPicturesWithResults"
      }
    },
    "class:TestSampleDataController": {
      "node_id": "class:TestSampleDataController",
      "attributes": {
        "type": "ApexClass",
        "name": "TestSampleDataController",
        "simpleName": "TestSampleDataController",
        "definingType": "TestSampleDataController",
        "public": false,
        "withSharing": false,
        "fileName": "TestSampleDataController_ast.txt",
        "created_at": "2025-10-25T01:00:39.318642"
      }
    },
    "method:TestSampleDataController.importSampleData": {
      "node_id": "method:TestSampleDataController.importSampleData",
      "attributes": {
        "type": "ApexMethod",
        "canonicalName": "TestSampleDataController.importSampleData",
        "className": "TestSampleDataController",
        "name": "importSampleData",
        "public": false,
        "static": true,
        "returnType": "void",
        "arity": 0,
        "created_at": "2025-10-25T01:00:39.329159"
      }
    },
    "soql:TestSampleDataController.importSampleData.0": {
      "node_id": "soql:TestSampleDataController.importSampleData.0",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT COUNT() FROM Property__c",
        "canonicalQuery": "SELECT COUNT() FROM Property__c",
        "className": "TestSampleDataController",
        "methodName": "importSampleData"
      }
    },
    "soql:TestSampleDataController.importSampleData.1": {
      "node_id": "soql:TestSampleDataController.importSampleData.1",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT COUNT() FROM Broker__c",
        "canonicalQuery": "SELECT COUNT() FROM Broker__c",
        "className": "TestSampleDataController",
        "methodName": "importSampleData"
      }
    },
    "soql:TestSampleDataController.importSampleData.2": {
      "node_id": "soql:TestSampleDataController.importSampleData.2",
      "attributes": {
        "type": "SOQLQuery",
        "query": "SELECT COUNT() FROM Contact",
        "canonicalQuery": "SELECT COUNT() FROM Contact",
        "className": "TestSampleDataController",
        "methodName": "importSampleData"
      }
    }
  },
  "relations": [
    {
      "from": "class:FileUtilitiesTest",
      "to": "method:FileUtilitiesTest.createFileFailsWhenIncorrectBase64Data",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:37.992487"
      }
    },
    {
      "from": "class:FileUtilitiesTest",
      "to": "method:FileUtilitiesTest.createFileFailsWhenIncorrectFilename",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:38.032676"
      }
    },
    {
      "from": "class:FileUtilitiesTest",
      "to": "method:FileUtilitiesTest.createFileFailsWhenIncorrectRecordId",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:37.973970"
      }
    },
    {
      "from": "class:FileUtilitiesTest",
      "to": "method:FileUtilitiesTest.createFileSucceedsWhenCorrectInput",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:37.932323"
      }
    },
    {
      "from": "class:FileUtilities",
      "to": "method:FileUtilities.createFile",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:39.443763"
      }
    },
    {
      "from": "class:GeocodingServiceTest",
      "to": "method:GeocodingServiceTest.blankAddress",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:38.233430"
      }
    },
    {
      "from": "class:GeocodingServiceTest",
      "to": "method:GeocodingServiceTest.errorResponse",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:38.253462"
      }
    },
    {
      "from": "class:GeocodingServiceTest",
      "to": "method:GeocodingServiceTest.respond",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:38.195349"
      }
    },
    {
      "from": "class:GeocodingServiceTest",
      "to": "method:GeocodingServiceTest.successResponse",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:38.214843"
      }
    },
    {
      "from": "class:GeocodingService",
      "to": "method:GeocodingService.geocodeAddresses",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:38.284497"
      }
    },
    {
      "from": "class:PagedResult",
      "to": "method:PagedResult.__sfdc_pageNumber",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:38.396807"
      }
    },
    {
      "from": "class:PagedResult",
      "to": "method:PagedResult.__sfdc_pageSize",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:38.345077"
      }
    },
    {
      "from": "class:PagedResult",
      "to": "method:PagedResult.__sfdc_records",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:38.483274"
      }
    },
    {
      "from": "class:PagedResult",
      "to": "method:PagedResult.__sfdc_totalItemCount",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:38.442166"
      }
    },
    {
      "from": "class:PropertyController",
      "to": "method:PropertyController.getPagedPropertyList",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:38.516715"
      }
    },
    {
      "from": "class:PropertyController",
      "to": "method:PropertyController.getPictures",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:38.580089"
      }
    },
    {
      "from": "class:SampleDataController",
      "to": "method:SampleDataController.importSampleData",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:38.655066"
      }
    },
    {
      "from": "class:SampleDataController",
      "to": "method:SampleDataController.insertBrokers",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:38.831376"
      }
    },
    {
      "from": "class:SampleDataController",
      "to": "method:SampleDataController.insertContacts",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:38.958989"
      }
    },
    {
      "from": "class:SampleDataController",
      "to": "method:SampleDataController.insertProperties",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:38.900385"
      }
    },
    {
      "from": "class:SampleDataController",
      "to": "method:SampleDataController.randomizeDateListed",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:39.014376"
      }
    },
    {
      "from": "class:TestPropertyController",
      "to": "method:TestPropertyController.createProperties",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:39.050673"
      }
    },
    {
      "from": "class:TestPropertyController",
      "to": "method:TestPropertyController.testGetPagedPropertyList",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:39.089279"
      }
    },
    {
      "from": "class:TestPropertyController",
      "to": "method:TestPropertyController.testGetPicturesNoResults",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:39.185354"
      }
    },
    {
      "from": "class:TestPropertyController",
      "to": "method:TestPropertyController.testGetPicturesWithResults",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:39.223949"
      }
    },
    {
      "from": "method:FileUtilities.createFile",
      "to": "dml:FileUtilities.createFile.INSERT.0",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "INSERT",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:39.482464"
      }
    },
    {
      "from": "method:FileUtilities.createFile",
      "to": "dml:FileUtilities.createFile.INSERT.1",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "INSERT",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:39.503588"
      }
    },
    {
      "from": "method:FileUtilities.createFile",
      "to": "soql:FileUtilities.createFile.0",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT ContentDocumentId                 FROM ContentVersion                 WHERE Id = :contentVersion.Id                 WITH USER_MODE",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:39.464447"
      }
    },
    {
      "from": "method:FileUtilitiesTest.createFileFailsWhenIncorrectBase64Data",
      "to": "dml:FileUtilitiesTest.createFileFailsWhenIncorrectBase64Data.INSERT.0",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "INSERT",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:38.012664"
      }
    },
    {
      "from": "method:FileUtilitiesTest.createFileFailsWhenIncorrectFilename",
      "to": "dml:FileUtilitiesTest.createFileFailsWhenIncorrectFilename.INSERT.0",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "INSERT",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:38.053546"
      }
    },
    {
      "from": "method:FileUtilitiesTest.createFileSucceedsWhenCorrectInput",
      "to": "dml:FileUtilitiesTest.createFileSucceedsWhenCorrectInput.INSERT.0",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "INSERT",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:37.953339"
      }
    },
    {
      "from": "method:PropertyController.getPagedPropertyList",
      "to": "soql:PropertyController.getPagedPropertyList.0",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT COUNT()             FROM Property__c             WHERE                 (Name LIKE :searchPattern                 OR City__c LIKE :searchPattern                 OR Tags__c LIKE :searchPattern)                 AND Price__c &lt;= :safeMaxPrice                 AND Beds__c >= :safeMinBedrooms                 AND Baths__c >= :safeMinBathrooms",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:38.539831"
      }
    },
    {
      "from": "method:PropertyController.getPagedPropertyList",
      "to": "soql:PropertyController.getPagedPropertyList.1",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT                 Id,                 Name,                 Address__c,                 City__c,                 State__c,                 Description__c,                 Price__c,                 Baths__c,                 Beds__c,                 Thumbnail__c,                 Location__Latitude__s,                 Location__Longitude__s             FROM Property__c             WHERE                 (Name LIKE :searchPattern                 OR City__c LIKE :searchPattern                 OR Tags__c LIKE :searchPattern)                 AND Price__c &lt;= :safeMaxPrice                 AND Beds__c >= :safeMinBedrooms                 AND Baths__c >= :safeMinBathrooms             WITH USER_MODE             ORDER BY Price__c             LIMIT :safePageSize             OFFSET :offset",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:38.560069"
      }
    },
    {
      "from": "method:PropertyController.getPictures",
      "to": "soql:PropertyController.getPictures.0",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT Id, LinkedEntityId, ContentDocument.Title             FROM ContentDocumentLink             WHERE                 LinkedEntityId = :propertyId                 AND ContentDocument.FileType IN ('PNG', 'JPG', 'GIF')             WITH USER_MODE",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:38.599425"
      }
    },
    {
      "from": "method:PropertyController.getPictures",
      "to": "soql:PropertyController.getPictures.1",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT Id, Title             FROM ContentVersion             WHERE ContentDocumentId IN :contentIds AND IsLatest = TRUE             WITH USER_MODE             ORDER BY CreatedDate",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:38.620048"
      }
    },
    {
      "from": "method:SampleDataController.importSampleData",
      "to": "dml:SampleDataController.importSampleData.DELETE.0",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "DELETE",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:38.748901"
      }
    },
    {
      "from": "method:SampleDataController.importSampleData",
      "to": "dml:SampleDataController.importSampleData.DELETE.1",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "DELETE",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:38.767556"
      }
    },
    {
      "from": "method:SampleDataController.importSampleData",
      "to": "dml:SampleDataController.importSampleData.DELETE.2",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "DELETE",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:38.788565"
      }
    },
    {
      "from": "method:SampleDataController.importSampleData",
      "to": "dml:SampleDataController.importSampleData.DELETE.3",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "DELETE",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:38.809856"
      }
    },
    {
      "from": "method:SampleDataController.importSampleData",
      "to": "soql:SampleDataController.importSampleData.0",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT Id FROM Case",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:38.674090"
      }
    },
    {
      "from": "method:SampleDataController.importSampleData",
      "to": "soql:SampleDataController.importSampleData.1",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT Id FROM Property__c",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:38.692725"
      }
    },
    {
      "from": "method:SampleDataController.importSampleData",
      "to": "soql:SampleDataController.importSampleData.2",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT Id FROM Broker__c",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:38.711977"
      }
    },
    {
      "from": "method:SampleDataController.importSampleData",
      "to": "soql:SampleDataController.importSampleData.3",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT Id FROM Contact",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:38.729999"
      }
    },
    {
      "from": "method:SampleDataController.insertBrokers",
      "to": "dml:SampleDataController.insertBrokers.INSERT.0",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "INSERT",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:38.878859"
      }
    },
    {
      "from": "method:SampleDataController.insertBrokers",
      "to": "soql:SampleDataController.insertBrokers.0",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT Id, Body             FROM StaticResource             WHERE Name = 'sample_data_brokers'",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:38.853754"
      }
    },
    {
      "from": "method:SampleDataController.insertContacts",
      "to": "dml:SampleDataController.insertContacts.INSERT.0",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "INSERT",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:38.997242"
      }
    },
    {
      "from": "method:SampleDataController.insertContacts",
      "to": "soql:SampleDataController.insertContacts.0",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT Id, Body             FROM StaticResource             WHERE Name = 'sample_data_contacts'",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:38.977999"
      }
    },
    {
      "from": "method:SampleDataController.insertProperties",
      "to": "dml:SampleDataController.insertProperties.INSERT.0",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "INSERT",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:38.939961"
      }
    },
    {
      "from": "method:SampleDataController.insertProperties",
      "to": "soql:SampleDataController.insertProperties.0",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT Id, Body             FROM StaticResource             WHERE Name = 'sample_data_properties'",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:38.920436"
      }
    },
    {
      "from": "method:TestPropertyController.createProperties",
      "to": "dml:TestPropertyController.createProperties.INSERT.0",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "INSERT",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:39.070115"
      }
    },
    {
      "from": "method:TestPropertyController.testGetPagedPropertyList",
      "to": "dml:TestPropertyController.testGetPagedPropertyList.INSERT.0",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "INSERT",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:39.147237"
      }
    },
    {
      "from": "method:TestPropertyController.testGetPagedPropertyList",
      "to": "dml:TestPropertyController.testGetPagedPropertyList.INSERT.1",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "INSERT",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:39.165496"
      }
    },
    {
      "from": "method:TestPropertyController.testGetPagedPropertyList",
      "to": "soql:TestPropertyController.testGetPagedPropertyList.0",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT Name, Id             FROM Profile             WHERE                 UserType = 'Standard'                 AND PermissionsPrivacyDataAccess = FALSE                 AND PermissionsSubmitMacrosAllowed = TRUE                 AND PermissionsMassInlineEdit = TRUE             LIMIT 1",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:39.109140"
      }
    },
    {
      "from": "method:TestPropertyController.testGetPagedPropertyList",
      "to": "soql:TestPropertyController.testGetPagedPropertyList.1",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT Id             FROM PermissionSet             WHERE Name = 'dreamhouse'",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:39.128160"
      }
    },
    {
      "from": "method:TestPropertyController.testGetPicturesNoResults",
      "to": "dml:TestPropertyController.testGetPicturesNoResults.INSERT.0",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "INSERT",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:39.204928"
      }
    },
    {
      "from": "method:TestPropertyController.testGetPicturesWithResults",
      "to": "dml:TestPropertyController.testGetPicturesWithResults.INSERT.0",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "INSERT",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:39.261663"
      }
    },
    {
      "from": "method:TestPropertyController.testGetPicturesWithResults",
      "to": "dml:TestPropertyController.testGetPicturesWithResults.INSERT.1",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "INSERT",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:39.282601"
      }
    },
    {
      "from": "method:TestPropertyController.testGetPicturesWithResults",
      "to": "dml:TestPropertyController.testGetPicturesWithResults.INSERT.2",
      "type": "CONTAINS_DML",
      "properties": {
        "operationType": "INSERT",
        "type": "CONTAINS_DML",
        "created_at": "2025-10-25T01:00:39.306133"
      }
    },
    {
      "from": "method:TestPropertyController.testGetPicturesWithResults",
      "to": "soql:TestPropertyController.testGetPicturesWithResults.0",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT Id, Title, LatestPublishedVersionId             FROM ContentDocument             LIMIT 1",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:39.242475"
      }
    },
    {
      "from": "class:TestSampleDataController",
      "to": "method:TestSampleDataController.importSampleData",
      "type": "HAS_METHOD",
      "properties": {
        "description": "Class contains method",
        "type": "HAS_METHOD",
        "created_at": "2025-10-25T01:00:39.340312"
      }
    },
    {
      "from": "method:TestSampleDataController.importSampleData",
      "to": "soql:TestSampleDataController.importSampleData.0",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT COUNT() FROM Property__c",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:39.361626"
      }
    },
    {
      "from": "method:TestSampleDataController.importSampleData",
      "to": "soql:TestSampleDataController.importSampleData.1",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT COUNT() FROM Broker__c",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:39.384223"
      }
    },
    {
      "from": "method:TestSampleDataController.importSampleData",
      "to": "soql:TestSampleDataController.importSampleData.2",
      "type": "CONTAINS_SOQL",
      "properties": {
        "query": "SELECT COUNT() FROM Contact",
        "type": "CONTAINS_SOQL",
        "created_at": "2025-10-25T01:00:39.408285"
      }
    }
  ]
}